:root {
  --responsiveUnit: calc(1vmin + 1vmax);
  --dynamicHeight: 100vh;

  --text: #ffffff;
  --wall: #ffffff;

  --headerHeight: calc(var(--responsiveUnit) *  10);
  --footerHeight: calc(var(--responsiveUnit) * 10);
  --mainHeight: calc(var(--dynamicHeight) - var(--headerHeight) - var(--footerHeight));
}

@supports (height: 100dvh) {
  :root {
    --dynamicHeight: 100dvh;
  }
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;

  min-width: 0;
}

html,
body {
  height: var(--dynamicHeight);
  overflow: hidden;
}

body {
  display: flex;
  flex-direction: column;
  color: var(--text);
  background-color: white;
  text-align: center;
  font-family: monospace;
}

header,
footer {
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

header {
  min-height: var(--headerHeight);
  border-bottom: calc(var(--responsiveUnit) * 0.1) solid var(--light);
}

footer {
  min-height: var(--footerHeight);
  border-top: calc(var(--responsiveUnit) * 0.1) solid var(--light);
}

main {
  min-height: var(--mainHeight);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  overflow: auto;
}

a {
  color: var(--tertiary);
}

span#heart {
  color: var(--danger);
}

h1 {
  font-size: calc(var(--responsiveUnit) * 2);
}

h2 {
  font-size: calc(var(--responsiveUnit) * 1);
}

.circulo-container {
  position: relative;
  width: 150px;
  height: 200px;
  animation: moveContainer 3s linear infinite;
}

.rastro {
  width: 220px;
  height: 160px;
  background-color: rgb(220, 58, 22);
  clip-path: polygon(38% 93%, 0% 100%, 39% 100%);
  position: absolute;
  bottom: 110px;
  left: 65%;
  transform: translateX(-50%);
  z-index: 1;
  opacity: 0;
  animation: fadeInOutRastro 3s linear infinite;
}

.circulo {
  width: 90px;
  height: 90px;
  background-color: rgb(8, 8, 91);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  z-index: 2;
  opacity: 0;
  animation: fadeInCirculo 1s forwards, rotateCirculo 3s linear infinite 1s;
}

.circuloMenor {
  width: 45px;
  height: 45px;
  background-color: white;
  border-radius: 50%;
  position: relative;
  animation: rotateTrianguloContainer 5s linear infinite 1s;
}

.triangulo {
  width: 50px;
  height: 50px;
  position: absolute;
  top: 40%;
  left: 40%;
  transform-origin: center center;
  fill: rgb(8, 8, 91);

}

.rotated-0 {
  transform: translate(-40%, -82%) rotate(0deg);
}

.rotated-72 {
  transform: translate(-80%, -55%) rotate(296deg);
}

.rotated-144 {
  transform: translate(-15%, -7%) rotate(140deg);
}

.rotated-216 {
  transform: translate(-64%, -6%) rotate(215deg);
}

.rotated-288 {
  transform: translate(-2%, -56%) rotate(67deg);
}

@media (orientation: portrait) {
  :root {
    --headerHeight: calc(var(--responsiveUnit) * 4);
    --footerHeight: calc(var(--responsiveUnit) * 6);
  }

  h1 {
    font-size: calc(var(--responsiveUnit) * 3);
  }

  h2 {
    font-size: calc(var(--responsiveUnit) * 2);
  }
}

@keyframes fadeInCirculo {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInOutRastro {
  0% {
    opacity: 0;
  }
  20% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  70% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

@keyframes rotateCirculoMenor {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes rotateCirculo {
  from {
    transform: translateX(-50%) rotate(0deg);
  }
  to {
    transform: translateX(-50%) rotate(360deg);
  }
}

@keyframes rotateTriangulo {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  50% {
    transform: translate(-50%, -50%) rotate(180deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes rotateTrianguloContainer {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveContainer {
  0% {
    left: 0%;
  }
  70% {
    left: 0%;
  }
  100% {
    left: 20%;
  }
}
